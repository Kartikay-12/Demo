plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'

}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Core dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
 
    // Spring Cloud Config
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
 
    // Actuator for monitoring and dynamic refresh
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
 
    // MapStruct for mapping
    implementation 'org.mapstruct:mapstruct:1.6.3'
 
    // Lombok for reducing boilerplate code
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
 
    // MapStruct annotation processor
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
 
    // Database and persistence
    runtimeOnly 'com.h2database:h2'
 
    // Testing dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test' // JUnit 5 included
    testImplementation 'org.mockito:mockito-core' // Mockito core
    testImplementation 'org.mockito:mockito-junit-jupiter' // Mockito with JUnit 5
 
    // Cucumber dependencies (JUnit 5 + Cucumber 5.x)
    testImplementation 'io.cucumber:cucumber-java:7.12.1'
    testImplementation 'io.cucumber:cucumber-spring:7.12.1'
    testImplementation 'io.cucumber:cucumber-junit-platform-engine:7.12.1'
}

tasks.named('test') {
    useJUnitPlatform() 
}

tasks.withType(JavaCompile) {
    options.annotationProcessorPath = configurations.annotationProcessor
}
