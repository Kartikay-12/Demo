plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'io.gatling.gradle' version '3.13.1'  // Gatling plugin for Gradle
    id 'scala'  // Add the Scala plugin to compile Scala code
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}
repositories {
    mavenCentral()  
    maven { url 'https://repo.spring.io/release' }
   
}

dependencies {
   
    // Core dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
 
    // Spring Cloud Config
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    
    //The spring-cloud-starter-config now automatically picks up the correct version from the BOM.
    implementation platform('org.springframework.cloud:spring-cloud-dependencies:2023.0.0')
    
    // Actuator for monitoring and dynamic refresh
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
 
    // MapStruct for mapping
    implementation 'org.mapstruct:mapstruct:1.6.3'
 
    // Lombok for reducing boilerplate code
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
 
    // MapStruct annotation processor
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
 
    // Database and persistence
    runtimeOnly 'com.h2database:h2'
 
    // Testing dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test' // JUnit 5 included
    testImplementation 'org.mockito:mockito-core' // Mockito core
    testImplementation 'org.mockito:mockito-junit-jupiter' // Mockito with JUnit 5
 
    // Cucumber dependencies (JUnit 5 + Cucumber 5.x)
    testImplementation 'io.cucumber:cucumber-java:7.12.1'
    testImplementation 'io.cucumber:cucumber-spring:7.12.1'
    testImplementation 'io.cucumber:cucumber-junit-platform-engine:7.12.1'
    
    //resilience4j
     implementation 'io.github.resilience4j:resilience4j-spring-boot2:1.7.0'
     
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'
    implementation 'org.eclipse.persistence:org.eclipse.persistence.moxy:4.0.2'
    //implementation 'org.eclipse.persistence:org.eclipse.persistence.json:2.7.9'
    
     implementation 'jakarta.json:jakarta.json-api:2.1.0'
     
    // Gatling dependencies
    implementation 'io.gatling:gatling-core:3.13.1'   // Core Gatling library
    implementation 'io.gatling:gatling-http:3.13.1'   // HTTP module for Gatling
    implementation 'io.gatling.highcharts:gatling-charts-highcharts:3.13.1'  // Highcharts for Gatling results
    implementation 'org.scala-lang:scala-library:2.13.15'  // Scala library dependency
    testImplementation 'org.scala-js:scalajs-test-bridge_2.13:1.17.0'
    implementation  'com.typesafe:config:1.3.1'
    
}
tasks.named('test') {
    useJUnitPlatform() 
}

tasks.withType(JavaCompile) {
    options.annotationProcessorPath = configurations.annotationProcessor
}

